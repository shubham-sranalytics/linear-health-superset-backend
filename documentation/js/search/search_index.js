var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.925,1,1.141]],["body/controllers/AppController.html",[0,1.423,1,1.173,2,1.218,3,0.784,4,0.784,5,0.635,6,1.218,7,0.969,8,2.388,9,1.823,10,1.823,11,1.451,12,1.451,13,2.478,14,2.478,15,2.506,16,2.068,17,2.388,18,1.823,19,3.179,20,2.388,21,2.186,22,1.74,23,1.932,24,2.171,25,0.512,26,1.823,27,2.186,28,2.427,29,3.179,30,1.823,31,0.085,32,2.068,33,1.451,34,1.595,35,1.451,36,3.179,37,2.388,38,1.932,39,1.451,40,1.755,41,1.74,42,1.451,43,1.823,44,1.74,45,1.74,46,1.74,47,1.451,48,1.451,49,1.932,50,2.599,51,2.251,52,2.728,53,1.823,54,2.478,55,2.186,56,1.451,57,2.388,58,1.74,59,1.74,60,1.823,61,1.595,62,1.823,63,1.823,64,1.823,65,2.186,66,2.186,67,1.562,68,1.823,69,2.388,70,1.451,71,1.173,72,0.784,73,0.919,74,1.218,75,0.784,76,0.314,77,1.595,78,1.823,79,1.451,80,2.251,81,0.969,82,1.218,83,1.218,84,1.218,85,1.218,86,1.595,87,1.173,88,1.823,89,1.595,90,1.218,91,1.595,92,0.969,93,1.451,94,1.595,95,1.595,96,1.932,97,1.595,98,1.595,99,0.969,100,1.451,101,0.969,102,1.451,103,0.969,104,0.969,105,0.969,106,1.218,107,1.218,108,1.218,109,1.218,110,0.784,111,1.218,112,1.932,113,1.218,114,1.218,115,1.218,116,1.218,117,1.595,118,1.595,119,1.595,120,1.218,121,0.969,122,1.451,123,0.969,124,1.595,125,1.595,126,1.218,127,1.595,128,1.218,129,1.595,130,0.043,131,0.043]],["title/modules/AppModule.html",[132,1.412,133,1.141]],["body/modules/AppModule.html",[1,1.917,2,2.735,3,1.412,4,1.412,5,1.145,31,0.083,71,2.105,72,1.412,73,1.375,74,2.195,75,1.412,76,0.566,130,0.065,131,0.065,132,2.371,133,2.105,134,1.747,135,1.145,136,2.195,137,2.195,138,2.195,139,2.979,140,2.195,141,2.195,142,2.195,143,2.735,144,2.195,145,1.747,146,2.875,147,2.875,148,2.875,149,1.145,150,2.735,151,2.875,152,3.582,153,1.412,154,2.875,155,2.875,156,2.875,157,2.195,158,2.875,159,2.875,160,2.195]],["title/injectables/AppService.html",[73,0.746,161,1.141]],["body/injectables/AppService.html",[3,0.355,4,0.355,5,0.288,7,1.365,12,1.206,13,2.393,14,2.204,15,2.621,16,1.206,22,1.496,23,0.762,24,0.762,25,0.232,26,0.958,27,2.477,28,0.958,31,0.084,32,0.762,33,1.701,35,1.206,38,1.783,39,1.01,40,1.669,41,0.762,42,1.206,43,0.958,44,1.916,45,1.916,46,2.065,47,2.141,48,0.762,49,1.206,51,1.496,54,1.607,56,0.762,58,1.971,59,1.971,60,2.477,67,1.844,71,0.975,72,0.355,73,0.403,75,0.355,76,0.142,78,2.138,79,0.439,80,2.575,81,0.439,84,0.958,87,0.817,92,1.365,93,0.762,96,1.854,99,2.232,100,1.496,101,1.206,102,1.206,103,0.439,104,0.439,105,1.01,107,2.407,110,0.817,112,1.496,113,1.515,114,1.515,115,0.552,120,1.269,121,1.783,122,1.916,123,1.701,128,1.269,130,0.023,131,0.023,145,0.439,149,0.288,150,1.269,153,0.355,157,0.552,160,0.552,161,0.616,162,0.723,163,0.552,164,1.254,165,0.958,166,1.515,167,1.254,168,1.254,169,2.019,170,0.958,171,1.985,172,1.715,173,0.958,174,2.731,175,2.943,176,2.329,177,2.019,178,3.153,179,2.24,180,0.616,181,1.88,182,1.985,183,1.254,184,1.254,185,1.254,186,1.254,187,0.723,188,1.88,189,2.645,190,1.254,191,1.88,192,1.012,193,1.715,194,0.723,195,1.254,196,1.515,197,1.985,198,0.958,199,1.254,200,1.254,201,0.958,202,0.958,203,1.985,204,1.254,205,0.723,206,1.985,207,1.662,208,1.254,209,1.254,210,1.254,211,1.254,212,1.254,213,1.254,214,1.254,215,1.254,216,2.138,217,1.985,218,2.539,219,2.019,220,1.254,221,2.645,222,2.246,223,0.723,224,1.254,225,2.138,226,1.254,227,0.958,228,0.958,229,1.254,230,1.254,231,1.254,232,1.254,233,1.254,234,1.254,235,1.254,236,0.723,237,1.254,238,1.254,239,0.958,240,0.958,241,0.958,242,1.254,243,1.254,244,1.254,245,1.985,246,1.254,247,1.515,248,0.958,249,1.254,250,0.723,251,1.515,252,1.269,253,0.958,254,1.254,255,2.246,256,2.019,257,1.254,258,1.515,259,1.254,260,1.254,261,1.254,262,1.254,263,1.254,264,2.934,265,1.515,266,1.254,267,1.662,268,1.254,269,0.552,270,0.723,271,0.958,272,1.254,273,1.254,274,0.958,275,1.254,276,0.958,277,0.958,278,0.723,279,1.269,280,2.645,281,0.439,282,1.269,283,1.269,284,1.662,285,0.552,286,0.355,287,0.723,288,0.723,289,2.934,290,0.723,291,0.552,292,0.723,293,0.723,294,0.723,295,0.958,296,0.958,297,0.723,298,0.552,299,0.552,300,0.552,301,0.552,302,0.552,303,0.723,304,0.723,305,0.723,306,1.662,307,0.723,308,1.269,309,1.269,310,1.269,311,1.254,312,1.662,313,1.662,314,1.254,315,1.662,316,1.662,317,0.723,318,2.463,319,0.723,320,0.723,321,0.552,322,0.723,323,0.723,324,0.723,325,0.439,326,0.723,327,1.254,328,0.723,329,0.723,330,0.552,331,0.723,332,0.552,333,0.723,334,0.723,335,0.552,336,0.723,337,0.723,338,0.723,339,0.552,340,0.723,341,0.723,342,0.958,343,0.723,344,0.723,345,0.723,346,0.723,347,0.552,348,0.723,349,0.723,350,0.723,351,0.723,352,0.723,353,0.723,354,1.254]],["title/classes/EnvironmentVariablesValidator.html",[76,0.457,355,1.412]],["body/classes/EnvironmentVariablesValidator.html",[3,1.283,4,1.283,5,1.04,11,1.587,25,0.838,30,2.849,31,0.084,33,2.268,67,2.054,70,2.048,71,1.833,75,1.283,76,0.663,87,1.283,112,1.587,130,0.061,131,0.061,149,1.04,180,1.656,192,1.198,269,1.994,277,1.994,325,1.587,355,2.268,356,2.612,357,1.994,358,3.732,359,3.732,360,3.732,361,3.371,362,2.612,363,2.612,364,3.371,365,2.612,366,2.849,367,3.371,368,3.371,369,3.371,370,2.612,371,2.612,372,2.612,373,3.944,374,3.944,375,3.371,376,3.371,377,1.994,378,1.587,379,2.612,380,1.994,381,2.612,382,2.612,383,2.612,384,2.612,385,2.612,386,2.612,387,2.612,388,2.612]],["title/coverage.html",[389,2.382]],["body/coverage.html",[0,1.233,1,1.52,5,1.233,6,2.363,31,0.081,73,0.993,76,0.609,88,2.363,130,0.068,131,0.068,161,1.52,163,2.363,192,0.993,271,2.363,355,1.88,357,2.363,378,1.88,389,2.363,390,2.363,391,3.095,392,3.095,393,3.095,394,3.095,395,3.095,396,4.292,397,3.095,398,2.45,399,4.032,400,2.363,401,4.19,402,2.363,403,3.095,404,2.363,405,2.363,406,2.363,407,3.095,408,3.095]],["title/dependencies.html",[135,1.108,409,1.5]],["body/dependencies.html",[31,0.083,72,1.57,76,0.752,130,0.069,131,0.069,135,1.273,149,1.273,153,1.57,281,1.942,377,2.44,410,3.196,411,4.088,412,3.196,413,2.44,414,3.196,415,3.821,416,3.196,417,3.196,418,3.196,419,3.196,420,3.196,421,3.196,422,3.196,423,3.196,424,3.196,425,3.196,426,3.196,427,3.196]],["title/miscellaneous/functions.html",[428,0.966,429,2.123]],["body/miscellaneous/functions.html",[25,1.023,31,0.079,40,1.566,58,1.937,92,2.318,130,0.069,131,0.069,191,2.913,192,1.023,193,2.913,378,2.318,380,2.433,398,1.937,400,3.117,402,2.913,405,2.433,406,2.913,428,1.566,429,2.433,430,2.913,431,3.187,432,3.187,433,3.815,434,3.187,435,3.187,436,3.815,437,3.815,438,3.815]],["title/index.html",[25,0.631,439,1.965,440,1.965]],["body/index.html",[0,0.874,9,2.292,10,1.089,11,1.625,12,0.867,13,2.499,14,2.166,15,2.475,16,2.293,18,1.089,21,1.089,22,1.333,23,0.867,24,1.333,31,0.081,32,0.867,35,0.867,38,1.625,39,0.867,40,1.078,41,0.867,42,1.625,44,1.625,45,1.824,46,1.824,47,1.625,48,1.824,49,2.556,50,2.041,51,1.969,52,2.041,53,1.089,54,2.166,55,1.675,56,1.625,59,1.333,62,1.089,63,1.675,64,1.089,65,1.675,66,1.089,67,2.02,68,1.089,70,1.333,79,1.824,80,2.341,81,0.867,82,1.089,83,1.089,85,1.089,87,1.475,90,1.089,93,1.333,96,2.166,99,0.867,100,1.625,101,0.867,102,1.824,103,1.333,104,1.333,105,1.824,106,2.041,108,1.675,109,1.675,110,1.313,111,1.089,116,1.675,121,1.333,122,1.625,123,1.333,126,1.089,130,0.04,131,0.04,135,0.874,149,0.568,153,0.701,165,1.675,166,1.675,169,1.089,170,1.089,172,2.041,173,1.089,174,2.041,175,2.809,176,2.041,177,1.089,179,1.089,181,1.089,188,1.089,192,0.858,196,1.089,198,1.089,201,1.675,202,1.089,216,1.089,218,2.292,219,1.675,225,2.041,227,1.089,228,1.089,239,1.089,240,1.089,241,1.089,247,1.675,248,1.089,251,1.089,252,1.675,253,1.089,256,1.089,258,1.089,265,1.089,274,1.089,276,1.089,279,2.041,281,0.867,282,1.089,283,1.089,285,2.041,286,1.313,291,1.089,295,1.675,296,1.089,298,1.089,299,1.089,300,1.089,301,1.089,302,1.089,308,1.089,309,1.089,310,1.089,321,1.675,325,1.333,330,1.089,332,1.675,335,1.089,339,1.675,342,1.675,347,1.089,366,2.292,390,1.089,413,1.089,441,0.867,442,3.422,443,1.426,444,2.194,445,1.426,446,1.426,447,1.426,448,1.426,449,3.002,450,1.426,451,2.673,452,1.426,453,1.426,454,1.426,455,1.426,456,1.426,457,1.426,458,2.194,459,1.426,460,1.426,461,1.426,462,3.564,463,1.426,464,1.426,465,2.194,466,2.194,467,1.426,468,1.426,469,1.426,470,1.426,471,1.426,472,1.426,473,1.426,474,1.426,475,1.426,476,1.426,477,1.426,478,1.426,479,1.426,480,1.426,481,2.194,482,1.426,483,1.426,484,1.426,485,2.194,486,1.426,487,1.426,488,2.194,489,1.426,490,1.426,491,1.426,492,1.426,493,2.194,494,1.426,495,1.426,496,1.426,497,1.426,498,2.194,499,1.426,500,2.194,501,2.194,502,1.426,503,2.194,504,2.194,505,1.426,506,1.426,507,1.426,508,1.426,509,1.426,510,1.426,511,1.426,512,1.426,513,1.426,514,1.426,515,1.426,516,2.194,517,1.426,518,1.426,519,1.426,520,1.426,521,1.426,522,1.426,523,1.426,524,1.426,525,1.426,526,2.194,527,1.426]],["title/modules.html",[134,1.896]],["body/modules.html",[31,0.073,130,0.073,131,0.073,133,1.731,134,2.141,528,3.523,529,3.523,530,3.523,531,3.523]],["title/overview.html",[441,1.896]],["body/overview.html",[0,1.309,31,0.075,73,1.328,76,0.646,110,2.1,130,0.071,131,0.071,132,2.36,133,2.1,135,1.309,136,2.508,137,2.508,138,2.508,139,2.508,140,2.508,141,2.508,142,2.508,143,2.966,144,2.508,145,1.996,161,1.614,441,1.996]],["title/properties.html",[180,1.366,409,1.5]],["body/properties.html",[7,2.103,31,0.081,130,0.073,131,0.073,180,1.7,532,3.46,533,3.46,534,3.46,535,3.46,536,3.46,537,3.46]],["title/miscellaneous/variables.html",[286,1.366,428,0.966]],["body/miscellaneous/variables.html",[25,1.117,31,0.077,130,0.073,131,0.073,192,1.117,286,1.71,398,2.115,404,3.067,428,1.71,430,2.657,538,3.481]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":533,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{},"overview.html":{}}}],["1,2)configuration",{"_index":460,"title":{},"body":{"index.html":{}}}],["1,2,3",{"_index":266,"title":{},"body":{"injectables/AppService.html":{}}}],["1.9.0",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":345,"title":{},"body":{"injectables/AppService.html":{}}}],["100",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["11.0.1",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["123",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["1|||2",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["1|||2|||3",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["2",{"_index":282,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["3",{"_index":283,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["3.4.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["30ddf642",{"_index":298,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["4",{"_index":284,"title":{},"body":{"injectables/AppService.html":{}}}],["4.0.0",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["40ee",{"_index":300,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["4c36",{"_index":299,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["7.8.1",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["access",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["access_token",{"_index":216,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["actual",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["ade2",{"_index":301,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["admin",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["allow",{"_index":226,"title":{},"body":{"injectables/AppService.html":{}}}],["apache",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["api",{"_index":201,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["app.controller",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["app.controller.ts",{"_index":447,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app.service.ts",{"_index":448,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["application/json",{"_index":310,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["applications",{"_index":228,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["applied",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["applies",{"_index":253,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["apply",{"_index":233,"title":{},"body":{"injectables/AppService.html":{}}}],["appmodule",{"_index":133,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["appservice",{"_index":73,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice.getguesttoken",{"_index":243,"title":{},"body":{"injectables/AppService.html":{}}}],["architecture",{"_index":444,"title":{},"body":{"index.html":{}}}],["array",{"_index":267,"title":{},"body":{"injectables/AppService.html":{}}}],["array;error",{"_index":470,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":459,"title":{},"body":{"index.html":{}}}],["async",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["attacks",{"_index":215,"title":{},"body":{"injectables/AppService.html":{}}}],["attributes",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["authenticates",{"_index":195,"title":{},"body":{"injectables/AppService.html":{}}}],["authentication",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["author",{"_index":536,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["authorized",{"_index":260,"title":{},"body":{"injectables/AppService.html":{}}}],["await",{"_index":123,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["aws",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["axios",{"_index":281,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["axioserror",{"_index":280,"title":{},"body":{"injectables/AppService.html":{}}}],["base",{"_index":463,"title":{},"body":{"index.html":{}}}],["based",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["bearer",{"_index":311,"title":{},"body":{"injectables/AppService.html":{}}}],["bootstrap",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bootstrapserver",{"_index":400,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":319,"title":{},"body":{"injectables/AppService.html":{}}}],["browse",{"_index":531,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":528,"title":{},"body":{"modules.html":{}}}],["build",{"_index":346,"title":{},"body":{"injectables/AppService.html":{}}}],["business",{"_index":450,"title":{},"body":{"index.html":{}}}],["cachedserver",{"_index":404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":119,"title":{},"body":{"controllers/AppController.html":{}}}],["calls",{"_index":202,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["catch",{"_index":125,"title":{},"body":{"controllers/AppController.html":{}}}],["catch((error",{"_index":312,"title":{},"body":{"injectables/AppService.html":{}}}],["changing",{"_index":209,"title":{},"body":{"injectables/AppService.html":{}}}],["check",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["checks",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["class",{"_index":76,"title":{"classes/EnvironmentVariablesValidator.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classconstructor",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classes",{"_index":356,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["clause",{"_index":264,"title":{},"body":{"injectables/AppService.html":{}}}],["clause.clause",{"_index":354,"title":{},"body":{"injectables/AppService.html":{}}}],["clauses",{"_index":252,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["client",{"_index":526,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["columns",{"_index":515,"title":{},"body":{"index.html":{}}}],["common",{"_index":507,"title":{},"body":{"index.html":{}}}],["complete",{"_index":238,"title":{},"body":{"injectables/AppService.html":{}}}],["config",{"_index":380,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/functions.html":{}}}],["config.ts",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["config/superset.config",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":188,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["configurable",{"_index":296,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["configuration",{"_index":279,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["configure",{"_index":502,"title":{},"body":{"index.html":{}}}],["connection",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["considerations",{"_index":476,"title":{},"body":{"index.html":{}}}],["const",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["constructor",{"_index":186,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(configservice",{"_index":187,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(private",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["containing",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["contains",{"_index":449,"title":{},"body":{"index.html":{}}}],["content",{"_index":309,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["context",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["convert",{"_index":340,"title":{},"body":{"injectables/AppService.html":{}}}],["cookie",{"_index":219,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["cookies",{"_index":509,"title":{},"body":{"index.html":{}}}],["core",{"_index":524,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":389,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["credentials",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["cross",{"_index":212,"title":{},"body":{"injectables/AppService.html":{}}}],["csrf",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["csrf_token",{"_index":221,"title":{},"body":{"injectables/AppService.html":{}}}],["csrftoken",{"_index":337,"title":{},"body":{"injectables/AppService.html":{}}}],["current",{"_index":477,"title":{},"body":{"index.html":{}}}],["dashboard",{"_index":225,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["dashboard_id",{"_index":222,"title":{},"body":{"injectables/AppService.html":{}}}],["dashboards",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["dashboardurl",{"_index":493,"title":{},"body":{"index.html":{}}}],["data",{"_index":256,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["data.status",{"_index":492,"title":{},"body":{"index.html":{}}}],["data.token",{"_index":305,"title":{},"body":{"injectables/AppService.html":{}}}],["database",{"_index":329,"title":{},"body":{"injectables/AppService.html":{}}}],["dataset",{"_index":514,"title":{},"body":{"index.html":{}}}],["db",{"_index":328,"title":{},"body":{"injectables/AppService.html":{}}}],["debug",{"_index":516,"title":{},"body":{"index.html":{}}}],["debugging",{"_index":274,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["declarations",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decodeduser",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["decodeduser.locations.join",{"_index":350,"title":{},"body":{"injectables/AppService.html":{}}}],["decodeduser.organisation_id",{"_index":349,"title":{},"body":{"injectables/AppService.html":{}}}],["decorators",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["default",{"_index":269,"title":{},"body":{"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["defined",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["definitions",{"_index":464,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":135,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"properties.html":{}}}],["designation",{"_index":95,"title":{},"body":{"controllers/AppController.html":{}}}],["details",{"_index":247,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["dev@beastinsights.co",{"_index":537,"title":{},"body":{"properties.html":{}}}],["development",{"_index":498,"title":{},"body":{"index.html":{}}}],["display",{"_index":91,"title":{},"body":{"controllers/AppController.html":{}}}],["document.getelementbyid('dashboard",{"_index":496,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":390,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["e.g",{"_index":352,"title":{},"body":{"injectables/AppService.html":{}}}],["each",{"_index":472,"title":{},"body":{"index.html":{}}}],["embed",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["embedding",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["empty",{"_index":351,"title":{},"body":{"injectables/AppService.html":{}}}],["enable",{"_index":517,"title":{},"body":{"index.html":{}}}],["end",{"_index":367,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["endpoint",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["endpoints",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["ensure",{"_index":481,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":257,"title":{},"body":{"injectables/AppService.html":{}}}],["env",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":285,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["environmentvariablesvalidator",{"_index":355,"title":{"classes/EnvironmentVariablesValidator.html":{}},"body":{"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{}}}],["envvariablesclass",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["error",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["error.message",{"_index":128,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["error.response?.data",{"_index":315,"title":{},"body":{"injectables/AppService.html":{}}}],["errors",{"_index":116,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["example",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["export",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["exports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["exposes",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["express",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":467,"title":{},"body":{"index.html":{}}}],["external",{"_index":227,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["eyj0exaioijkv1qilcjhbgcioi",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["fails",{"_index":114,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["failure",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["failures",{"_index":512,"title":{},"body":{"index.html":{}}}],["false",{"_index":383,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["false})@isnotempty()@matches",{"_index":365,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["fc77e6285a6c",{"_index":302,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["fetch",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["fetch('http://your",{"_index":490,"title":{},"body":{"index.html":{}}}],["fetchaccesstoken",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["fetchaccesstokenresponse",{"_index":332,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["fetchcsrftoken",{"_index":183,"title":{},"body":{"injectables/AppService.html":{}}}],["fetchcsrftoken(access_token",{"_index":204,"title":{},"body":{"injectables/AppService.html":{}}}],["fetchcsrftokenresponse",{"_index":321,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["fetches",{"_index":206,"title":{},"body":{"injectables/AppService.html":{}}}],["fetchguesttoken",{"_index":184,"title":{},"body":{"injectables/AppService.html":{}}}],["fetchguesttoken(access_token",{"_index":220,"title":{},"body":{"injectables/AppService.html":{}}}],["fetchguesttokenresponse",{"_index":339,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["fetching",{"_index":314,"title":{},"body":{"injectables/AppService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{}}}],["filter",{"_index":255,"title":{},"body":{"injectables/AppService.html":{}}}],["filtering",{"_index":458,"title":{},"body":{"index.html":{}}}],["final",{"_index":523,"title":{},"body":{"index.html":{}}}],["first_name",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["first_name/last_name",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["flow",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["following",{"_index":240,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["follows",{"_index":445,"title":{},"body":{"index.html":{}}}],["forgery",{"_index":214,"title":{},"body":{"injectables/AppService.html":{}}}],["framework",{"_index":525,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":489,"title":{},"body":{"index.html":{}}}],["full",{"_index":98,"title":{},"body":{"controllers/AppController.html":{}}}],["function",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":429,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":120,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["generated",{"_index":248,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["generates",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["generating",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["generation",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["get(`${this.supersetconfig?.url}/api/v1/security/csrf_token",{"_index":307,"title":{},"body":{"injectables/AppService.html":{}}}],["getguesttoken",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getguesttoken(user",{"_index":235,"title":{},"body":{"injectables/AppService.html":{}}}],["gethello",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["getrls",{"_index":185,"title":{},"body":{"injectables/AppService.html":{}}}],["getrls(adminuser",{"_index":261,"title":{},"body":{"injectables/AppService.html":{}}}],["getrls(regularuser",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["getrls(user",{"_index":249,"title":{},"body":{"injectables/AppService.html":{}}}],["getting",{"_index":439,"title":{"index.html":{}},"body":{}}],["grants",{"_index":97,"title":{},"body":{"controllers/AppController.html":{}}}],["greeting",{"_index":69,"title":{},"body":{"controllers/AppController.html":{}}}],["guest",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["handled",{"_index":511,"title":{},"body":{"index.html":{}}}],["handler",{"_index":402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handler(req",{"_index":432,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handles",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["handling",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["hardcoded",{"_index":79,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["headers",{"_index":308,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["health",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["hello",{"_index":65,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["http",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["httpmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["https",{"_index":382,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["httpservice",{"_index":189,"title":{},"body":{"injectables/AppService.html":{}}}],["id",{"_index":295,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["identifier",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["ids",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["iframe",{"_index":495,"title":{},"body":{"index.html":{}}}],["iframe').src",{"_index":497,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":478,"title":{},"body":{"index.html":{}}}],["import",{"_index":71,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["imports",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["includes",{"_index":471,"title":{},"body":{"index.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["information",{"_index":234,"title":{},"body":{"injectables/AppService.html":{}}}],["initiates",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["injectable",{"_index":161,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":162,"title":{},"body":{"injectables/AppService.html":{}}}],["install",{"_index":500,"title":{},"body":{"index.html":{}}}],["instance",{"_index":273,"title":{},"body":{"injectables/AppService.html":{}}}],["instanceof",{"_index":127,"title":{},"body":{"controllers/AppController.html":{}}}],["interface",{"_index":462,"title":{},"body":{"index.html":{}}}],["involves",{"_index":455,"title":{},"body":{"index.html":{}}}],["isglobal",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":374,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isstring",{"_index":373,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isstring()@isnotempty",{"_index":361,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["isstring()@isurl({protocols",{"_index":363,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["issues",{"_index":508,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":375,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["john.doe",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["last_name",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["legend",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["level",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["library",{"_index":527,"title":{},"body":{"index.html":{}}}],["license",{"_index":534,"title":{},"body":{"properties.html":{}}}],["load",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["location",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["locations",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["log",{"_index":519,"title":{},"body":{"index.html":{}}}],["logger",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["logger(appservice.name",{"_index":272,"title":{},"body":{"injectables/AppService.html":{}}}],["logger.setloglevel(['debug']);api",{"_index":520,"title":{},"body":{"index.html":{}}}],["logging",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["logic",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["login",{"_index":198,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["logs",{"_index":473,"title":{},"body":{"index.html":{}}}],["main",{"_index":8,"title":{},"body":{"controllers/AppController.html":{}}}],["maintaining",{"_index":229,"title":{},"body":{"injectables/AppService.html":{}}}],["make",{"_index":304,"title":{},"body":{"injectables/AppService.html":{}}}],["management",{"_index":485,"title":{},"body":{"index.html":{}}}],["manages",{"_index":167,"title":{},"body":{"injectables/AppService.html":{}}}],["managing",{"_index":452,"title":{},"body":{"index.html":{}}}],["match",{"_index":513,"title":{},"body":{"index.html":{}}}],["matches",{"_index":376,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["matching",{"_index":131,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":70,"title":{},"body":{"controllers/AppController.html":{},"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["metadata",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":196,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["methods",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["miscellaneous",{"_index":428,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":504,"title":{},"body":{"index.html":{}}}],["module",{"_index":132,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":134,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["multi",{"_index":168,"title":{},"body":{"injectables/AppService.html":{}}}],["multiple",{"_index":456,"title":{},"body":{"index.html":{}}}],["name",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["nestjs",{"_index":442,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":72,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/core",{"_index":413,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/platform",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["network",{"_index":115,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["new",{"_index":271,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["non",{"_index":347,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["note",{"_index":294,"title":{},"body":{"injectables/AppService.html":{}}}],["npm",{"_index":501,"title":{},"body":{"index.html":{}}}],["number",{"_index":466,"title":{},"body":{"index.html":{}}}],["numbers",{"_index":341,"title":{},"body":{"injectables/AppService.html":{}}}],["object",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["objects",{"_index":268,"title":{},"body":{"injectables/AppService.html":{}}}],["obtain",{"_index":171,"title":{},"body":{"injectables/AppService.html":{}}}],["occur",{"_index":117,"title":{},"body":{"controllers/AppController.html":{}}}],["occurs",{"_index":322,"title":{},"body":{"injectables/AppService.html":{}}}],["omit",{"_index":468,"title":{},"body":{"index.html":{}}}],["operation",{"_index":199,"title":{},"body":{"injectables/AppService.html":{}}}],["operations",{"_index":210,"title":{},"body":{"injectables/AppService.html":{}}}],["optional",{"_index":193,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["orchestrates",{"_index":237,"title":{},"body":{"injectables/AppService.html":{}}}],["organisation_id",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["organization",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["out",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"overview.html":{}}}],["overview",{"_index":441,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":409,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":289,"title":{},"body":{"injectables/AppService.html":{}}}],["parameter",{"_index":480,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":191,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["parsed",{"_index":469,"title":{},"body":{"index.html":{}}}],["parseint(location",{"_index":344,"title":{},"body":{"injectables/AppService.html":{}}}],["passed",{"_index":479,"title":{},"body":{"index.html":{}}}],["password",{"_index":325,"title":{},"body":{"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["performs",{"_index":197,"title":{},"body":{"injectables/AppService.html":{}}}],["permissions",{"_index":179,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["pipe",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["post",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["practice_location_id",{"_index":265,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["preserves",{"_index":475,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":211,"title":{},"body":{"injectables/AppService.html":{}}}],["private",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["process",{"_index":239,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["process.env.superset_embedded_password",{"_index":387,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.superset_embedded_url",{"_index":388,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["process.env.superset_embedded_username",{"_index":386,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["production",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["promise",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{}}}],["properly",{"_index":510,"title":{},"body":{"index.html":{}}}],["properties",{"_index":180,"title":{"properties.html":{}},"body":{"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"properties.html":{}}}],["protocols",{"_index":381,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["provider",{"_index":327,"title":{},"body":{"injectables/AppService.html":{}}}],["providers",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":443,"title":{},"body":{"index.html":{}}}],["queries",{"_index":254,"title":{},"body":{"injectables/AppService.html":{}}}],["readonly",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["record",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reflect",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":203,"title":{},"body":{"injectables/AppService.html":{}}}],["refresh_token",{"_index":522,"title":{},"body":{"index.html":{}}}],["registeras",{"_index":372,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["registeras('superset",{"_index":384,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["regular",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["remarks",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["replaced",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["req",{"_index":434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["request",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["requests",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["require_tld",{"_index":364,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["required",{"_index":207,"title":{},"body":{"injectables/AppService.html":{}}}],["requires",{"_index":461,"title":{},"body":{"index.html":{}}}],["res",{"_index":433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reset",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resources",{"_index":334,"title":{},"body":{"injectables/AppService.html":{}}}],["response",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["response.data",{"_index":318,"title":{},"body":{"injectables/AppService.html":{}}}],["response.headers['set",{"_index":320,"title":{},"body":{"injectables/AppService.html":{}}}],["response.json",{"_index":491,"title":{},"body":{"index.html":{}}}],["responses",{"_index":474,"title":{},"body":{"index.html":{}}}],["responsible",{"_index":164,"title":{},"body":{"injectables/AppService.html":{}}}],["result",{"_index":291,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["results",{"_index":130,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retrieves",{"_index":242,"title":{},"body":{"injectables/AppService.html":{}}}],["return",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["returns",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["rls",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["role",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["row",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["rules",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["rules.filter((clause",{"_index":353,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":503,"title":{},"body":{"index.html":{}}}],["running",{"_index":64,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["rxjs",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["secrets",{"_index":484,"title":{},"body":{"index.html":{}}}],["securely",{"_index":483,"title":{},"body":{"index.html":{}}}],["security",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["see",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["separated",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["server",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverless",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["service",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["session",{"_index":218,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["setting",{"_index":518,"title":{},"body":{"index.html":{}}}],["setup",{"_index":499,"title":{},"body":{"index.html":{}}}],["simple",{"_index":68,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["site",{"_index":213,"title":{},"body":{"injectables/AppService.html":{}}}],["slash",{"_index":369,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["specific",{"_index":224,"title":{},"body":{"injectables/AppService.html":{}}}],["sql",{"_index":251,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["src/.../main.ts",{"_index":430,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../validate",{"_index":431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:46",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:76",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":163,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:121",{"_index":194,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:163",{"_index":223,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:18",{"_index":278,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:21",{"_index":190,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:215",{"_index":250,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:52",{"_index":236,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:88",{"_index":205,"title":{},"body":{"injectables/AppService.html":{}}}],["src/config/superset.config.ts",{"_index":357,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{}}}],["src/config/superset.config.ts:12",{"_index":362,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/superset.config.ts:20",{"_index":370,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/config/superset.config.ts:8",{"_index":371,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["src/main.ts",{"_index":398,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/utils/validate",{"_index":405,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":446,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":505,"title":{},"body":{"index.html":{}}}],["started",{"_index":440,"title":{"index.html":{}},"body":{}}],["state",{"_index":208,"title":{},"body":{"injectables/AppService.html":{}}}],["statements",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["step",{"_index":169,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["steps",{"_index":241,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["stored",{"_index":482,"title":{},"body":{"index.html":{}}}],["string",{"_index":67,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["string(error",{"_index":129,"title":{},"body":{"controllers/AppController.html":{}}}],["structure",{"_index":457,"title":{},"body":{"index.html":{}}}],["structured",{"_index":126,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["subsequent",{"_index":200,"title":{},"body":{"injectables/AppService.html":{}}}],["success",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["superset",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["superset_config",{"_index":276,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["superset_embedded_password",{"_index":358,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["superset_embedded_url",{"_index":359,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["superset_embedded_username",{"_index":360,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["superset_url}/superset/dashboard/${dashboard_id}/?guest_token=${data.token",{"_index":494,"title":{},"body":{"index.html":{}}}],["supersetconfig",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["support",{"_index":529,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":530,"title":{},"body":{"modules.html":{}}}],["system",{"_index":486,"title":{},"body":{"index.html":{}}}],["table",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["this.appservice.getguesttoken(this.user",{"_index":124,"title":{},"body":{"controllers/AppController.html":{}}}],["this.configservice.get('superset",{"_index":288,"title":{},"body":{"injectables/AppService.html":{}}}],["this.fetchaccesstoken",{"_index":290,"title":{},"body":{"injectables/AppService.html":{}}}],["this.fetchcsrftoken(access_token",{"_index":292,"title":{},"body":{"injectables/AppService.html":{}}}],["this.fetchguesttoken",{"_index":297,"title":{},"body":{"injectables/AppService.html":{}}}],["this.getrls(user",{"_index":293,"title":{},"body":{"injectables/AppService.html":{}}}],["this.httpservice.axiosref",{"_index":306,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.debug('access",{"_index":331,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.debug('csrf",{"_index":317,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.debug('guest",{"_index":338,"title":{},"body":{"injectables/AppService.html":{}}}],["this.logger.error('error",{"_index":313,"title":{},"body":{"injectables/AppService.html":{}}}],["this.supersetconfig",{"_index":287,"title":{},"body":{"injectables/AppService.html":{}}}],["this.supersetconfig?.password",{"_index":326,"title":{},"body":{"injectables/AppService.html":{}}}],["this.supersetconfig?.url}/api/v1/security/guest_token",{"_index":333,"title":{},"body":{"injectables/AppService.html":{}}}],["this.supersetconfig?.url}/api/v1/security/login",{"_index":323,"title":{},"body":{"injectables/AppService.html":{}}}],["this.supersetconfig?.username",{"_index":324,"title":{},"body":{"injectables/AppService.html":{}}}],["through",{"_index":230,"title":{},"body":{"injectables/AppService.html":{}}}],["throw",{"_index":316,"title":{},"body":{"injectables/AppService.html":{}}}],["throws",{"_index":113,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["timeout",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["todo",{"_index":303,"title":{},"body":{"injectables/AppService.html":{}}}],["token",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["tokenresponse",{"_index":465,"title":{},"body":{"index.html":{}}}],["tokens",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["tracking",{"_index":275,"title":{},"body":{"injectables/AppService.html":{}}}],["trailing",{"_index":368,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["transformer",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["troubleshooting",{"_index":506,"title":{},"body":{"index.html":{}}}],["true",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["try",{"_index":118,"title":{},"body":{"controllers/AppController.html":{}}}],["type",{"_index":192,"title":{},"body":{"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":521,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":277,"title":{},"body":{"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{}}}],["unlicensed",{"_index":535,"title":{},"body":{"properties.html":{}}}],["url",{"_index":366,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["usage",{"_index":487,"title":{},"body":{"index.html":{}}}],["use",{"_index":488,"title":{},"body":{"index.html":{}}}],["used",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["user",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["user's",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["user.locations.split('|||').map((location",{"_index":343,"title":{},"body":{"injectables/AppService.html":{}}}],["user.user_type",{"_index":348,"title":{},"body":{"injectables/AppService.html":{}}}],["user_type",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["username",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/EnvironmentVariablesValidator.html":{},"index.html":{}}}],["users",{"_index":258,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["uses",{"_index":451,"title":{},"body":{"index.html":{}}}],["using",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["utils/validate",{"_index":379,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["uuid",{"_index":232,"title":{},"body":{"injectables/AppService.html":{}}}],["valid",{"_index":217,"title":{},"body":{"injectables/AppService.html":{}}}],["validateconfig",{"_index":378,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateconfig(config",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateconfig(process.env",{"_index":385,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{}}}],["validation",{"_index":231,"title":{},"body":{"injectables/AppService.html":{}}}],["validator",{"_index":377,"title":{},"body":{"classes/EnvironmentVariablesValidator.html":{},"dependencies.html":{}}}],["value",{"_index":270,"title":{},"body":{"injectables/AppService.html":{}}}],["variable",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":286,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verify",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["version",{"_index":532,"title":{},"body":{"properties.html":{}}}],["works",{"_index":454,"title":{},"body":{"index.html":{}}}],["world",{"_index":66,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["worldpost",{"_index":453,"title":{},"body":{"index.html":{}}}],["x",{"_index":336,"title":{},"body":{"injectables/AppService.html":{}}}],["zoom",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Main application controller that handles HTTP requests\nfor the Superset guest token service.\nThis controller exposes endpoints for health checks and\ngenerating guest tokens for embedding Superset dashboards.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getGuestToken\n                            \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getGuestToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGuestToken()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:76\n                        \n                    \n\n\n            \n                \n                        Generates a guest token for embedding Superset dashboards.\nThis endpoint initiates the authentication flow with Superset\nand returns a guest token that can be used to embed dashboards\nwith appropriate row-level security rules applied.\nExample :POST /\nSuccess Response:\n{\n  \"status\": \"success\",\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOi...\"\n}Error Response:\n{\n  \"status\": \"failure\",\n  \"error\": \"Connection timeout to Superset\"\n}\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Object containing the guest token or error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:46\n                        \n                    \n\n\n            \n                \n                        Health check endpoint to verify the service is running.\nExample :GET /\nResponse: \"Hello World\"\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Simple greeting message\n\n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n/**\n * Main application controller that handles HTTP requests\n * for the Superset guest token service.\n *\n * This controller exposes endpoints for health checks and\n * generating guest tokens for embedding Superset dashboards.\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  /**\n   * Hardcoded user object used for generating guest tokens.\n   * In production, this should be replaced with actual user\n   * authentication and authorization logic.\n   *\n   * @remarks\n   * - username: Identifier for the user in Superset\n   * - first_name/last_name: User's display name\n   * - user_type: Role designation (ADMIN grants full access)\n   * - organisation_id: Organization identifier for row-level security\n   * - locations: Pipe-separated (|||) string of location IDs\n   */\n  private readonly user: User = {\n    username: 'admin',\n    first_name: 'Admin',\n    last_name: 'User',\n    user_type: 'ADMIN',\n    organisation_id: 1,\n    locations: '1|||2',\n  };\n\n  /**\n   * Health check endpoint to verify the service is running.\n   *\n   * @returns {string} Simple greeting message\n   *\n   * @example\n   * GET /\n   * Response: \"Hello World\"\n   */\n  @Get('/')\n  getHello(): string {\n    return 'Hello World';\n  }\n\n  /**\n   * Generates a guest token for embedding Superset dashboards.\n   *\n   * This endpoint initiates the authentication flow with Superset\n   * and returns a guest token that can be used to embed dashboards\n   * with appropriate row-level security rules applied.\n   *\n   * @returns {Promise} Object containing the guest token or error\n   *\n   * @example\n   * POST /\n   * Success Response:\n   * {\n   *   \"status\": \"success\",\n   *   \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOi...\"\n   * }\n   *\n   * Error Response:\n   * {\n   *   \"status\": \"failure\",\n   *   \"error\": \"Connection timeout to Superset\"\n   * }\n   *\n   * @throws {Error} When Superset authentication fails or network errors occur\n   */\n  @Post('/')\n  async getGuestToken(): Promise {\n    try {\n      // Call the service to generate a guest token using the hardcoded user\n      const token = await this.appService.getGuestToken(this.user);\n      return { status: 'success', token };\n    } catch (error) {\n      // Return a structured error response\n      return {\n        status: 'failure' as const,\n        error: error instanceof Error ? error.message : String(error),\n      };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\n\nimport supersetConfig from './config/superset.config';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ['.env'],\n      load: [supersetConfig],\n    }),\n    HttpModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for handling Superset authentication and guest token generation.\nThis service manages the multi-step authentication flow with Apache Superset:\n\nObtain an access token using admin credentials\nFetch a CSRF token using the access token\nGenerate row-level security (RLS) rules based on user attributes\nRequest a guest token with the appropriate permissions\n\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                supersetConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchAccessToken\n                            \n                            \n                                    Async\n                                fetchCSRFToken\n                            \n                            \n                                    Async\n                                fetchGuestToken\n                            \n                            \n                                    Async\n                                getGuestToken\n                            \n                            \n                                getRLS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Authenticates with Superset using admin credentials.\nThis method performs a login operation to obtain an access token\nthat will be used for subsequent API calls to Superset.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Object containing access and refresh tokens\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchCSRFToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchCSRFToken(access_token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:88\n                        \n                    \n\n\n            \n                \n                        Fetches a CSRF token from Superset.\nCSRF tokens are required for state-changing operations in Superset\nto prevent cross-site request forgery attacks.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                access_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nValid access token from Superset\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Object containing CSRF token and session cookie\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchGuestToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchGuestToken(access_token: string, csrf_token: string, session: string, dashboard_id: string, rls: RLS, user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:163\n                        \n                    \n\n\n            \n                \n                        Requests a guest token from Superset with specific dashboard permissions.\nGuest tokens allow embedding Superset dashboards in external applications\nwhile maintaining security through row-level security rules.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                access_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nValid access token\n\n\n                                            \n                                        \n                                        \n                                                csrf_token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nCSRF token for request validation\n\n\n                                            \n                                        \n                                        \n                                                session\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nSession cookie from CSRF token request\n\n\n                                            \n                                        \n                                        \n                                                dashboard_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUUID of the dashboard to embed\n\n\n                                            \n                                        \n                                        \n                                                rls\n                                            \n                                                        RLS\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nRow-level security rules to apply\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser information to embed in the token\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Object containing the guest token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getGuestToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getGuestToken(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Orchestrates the complete guest token generation process.\nThis method performs the following steps:\n\nFetches an access token from Superset\nRetrieves a CSRF token using the access token\nGenerates RLS rules based on user attributes\nRequests a guest token with the dashboard permissions\n\nExample :const token = await appService.getGuestToken({\n  username: 'john.doe',\n  user_type: 'USER',\n  organisation_id: 123,\n  locations: '1|||2|||3'\n});\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe user object containing authentication details\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                The generated guest token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRLS\n                        \n                    \n                \n            \n            \n                \ngetRLS(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:215\n                        \n                    \n\n\n            \n                \n                        Generates row-level security (RLS) rules based on user attributes.\nRLS rules are SQL WHERE clauses that Superset applies to queries\nto filter data based on user permissions. This ensures users only\nsee data they are authorized to access.\nExample :// For an admin user\ngetRLS(adminUser) // Returns: []// For a regular user\ngetRLS(regularUser) // Returns: [\n  { clause: \"organisation_id IN (123)\" },\n  { clause: \"practice_location_id IN (1,2,3)\" }\n]\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser object containing organization and location data\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     RLS\n\n                        \n                            \n                                Array of SQL clause objects for row-level security\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AppService.name)\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:21\n                        \n                    \n\n            \n                \n                    Logger instance for debugging and error tracking\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        supersetConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SUPERSET_CONFIG | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:18\n                        \n                    \n\n            \n                \n                    Configuration object containing Superset connection details\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosError } from 'axios';\n\n/**\n * Service responsible for handling Superset authentication and guest token generation.\n *\n * This service manages the multi-step authentication flow with Apache Superset:\n * 1. Obtain an access token using admin credentials\n * 2. Fetch a CSRF token using the access token\n * 3. Generate row-level security (RLS) rules based on user attributes\n * 4. Request a guest token with the appropriate permissions\n */\n@Injectable()\nexport class AppService {\n  /** Configuration object containing Superset connection details */\n  private readonly supersetConfig: SUPERSET_CONFIG | undefined;\n\n  /** Logger instance for debugging and error tracking */\n  private readonly logger = new Logger(AppService.name);\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService,\n  ) {\n    // Load Superset configuration from environment variables\n    this.supersetConfig = this.configService.get('superset');\n  }\n\n  /**\n   * Orchestrates the complete guest token generation process.\n   *\n   * This method performs the following steps:\n   * 1. Fetches an access token from Superset\n   * 2. Retrieves a CSRF token using the access token\n   * 3. Generates RLS rules based on user attributes\n   * 4. Requests a guest token with the dashboard permissions\n   *\n   * @param {User} user - The user object containing authentication details\n   * @returns {Promise} The generated guest token\n   * @throws {Error} If any step in the authentication flow fails\n   *\n   * @example\n   * const token = await appService.getGuestToken({\n   *   username: 'john.doe',\n   *   user_type: 'USER',\n   *   organisation_id: 123,\n   *   locations: '1|||2|||3'\n   * });\n   */\n  async getGuestToken(user: User): Promise {\n    // Step 1: Get access token using admin credentials\n    const { access_token } = await this.fetchAccessToken();\n\n    // Step 2: Get CSRF token for security\n    const { result: csrf_token, session } = await this.fetchCSRFToken(access_token);\n\n    // Step 3: Generate RLS rules based on user permissions\n    const rls = this.getRLS(user);\n\n    // Step 4: Get guest token with all required parameters\n    // Note: Dashboard ID is hardcoded - should be configurable in production\n    const data = await this.fetchGuestToken(\n      access_token,\n      csrf_token,\n      session,\n      '30ddf642-4c36-40ee-ade2-fc77e6285a6c', // TODO: Make this configurable\n      rls,\n      user,\n    );\n\n    return data.token;\n  }\n\n  /**\n   * Fetches a CSRF token from Superset.\n   *\n   * CSRF tokens are required for state-changing operations in Superset\n   * to prevent cross-site request forgery attacks.\n   *\n   * @param {string} access_token - Valid access token from Superset\n   * @returns {Promise} Object containing CSRF token and session cookie\n   * @throws {AxiosError} If the request to Superset fails\n   *\n   * @private\n   */\n  async fetchCSRFToken(access_token: string): Promise {\n    const response = await this.httpService.axiosRef\n      .get(`${this.supersetConfig?.url}/api/v1/security/csrf_token`, {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${access_token}`,\n        },\n      })\n      .catch((error: AxiosError) => {\n        this.logger.error('Error fetching CSRF token:', error.response?.data || error.message);\n        throw error;\n      });\n\n    this.logger.debug('CSRF token response:', response.data);\n\n    // Return both the CSRF token and session cookie\n    return {\n      ...response.data,\n      session: response.headers['set-cookie'],\n    } as FetchCSRFTokenResponse;\n  }\n\n  /**\n   * Authenticates with Superset using admin credentials.\n   *\n   * This method performs a login operation to obtain an access token\n   * that will be used for subsequent API calls to Superset.\n   *\n   * @returns {Promise} Object containing access and refresh tokens\n   * @throws {AxiosError} If authentication fails or network error occurs\n   *\n   * @private\n   */\n  async fetchAccessToken(): Promise {\n    const response = await this.httpService.axiosRef\n      .post(\n        `${this.supersetConfig?.url}/api/v1/security/login`,\n        {\n          username: this.supersetConfig?.username,\n          password: this.supersetConfig?.password,\n          provider: 'db', // Database authentication provider\n          refresh: true, // Request a refresh token\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      )\n      .catch((error: AxiosError) => {\n        this.logger.error('Error logging in to Superset:', error.response?.data || error.message);\n        throw error;\n      });\n\n    this.logger.debug('Access token response:', response.data);\n    return response.data as FetchAccessTokenResponse;\n  }\n\n  /**\n   * Requests a guest token from Superset with specific dashboard permissions.\n   *\n   * Guest tokens allow embedding Superset dashboards in external applications\n   * while maintaining security through row-level security rules.\n   *\n   * @param {string} access_token - Valid access token\n   * @param {string} csrf_token - CSRF token for request validation\n   * @param {string} session - Session cookie from CSRF token request\n   * @param {string} dashboard_id - UUID of the dashboard to embed\n   * @param {RLS} rls - Row-level security rules to apply\n   * @param {User} user - User information to embed in the token\n   * @returns {Promise} Object containing the guest token\n   * @throws {AxiosError} If the request fails\n   *\n   * @private\n   */\n  async fetchGuestToken(access_token: string, csrf_token: string, session: string, dashboard_id: string, rls: RLS, user: User): Promise {\n    const response = await this.httpService.axiosRef\n      .post(\n        `${this.supersetConfig?.url}/api/v1/security/guest_token`,\n        {\n          resources: [\n            {\n              type: 'dashboard',\n              id: dashboard_id,\n            },\n          ],\n          rls, // Row-level security rules\n          user, // User context for the token\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${access_token}`,\n            'X-CSRFToken': csrf_token,\n            Cookie: session,\n          },\n        },\n      )\n      .catch((error: AxiosError) => {\n        this.logger.error('Error fetching guest token:', error.response?.data || error.message);\n        throw error;\n      });\n\n    this.logger.debug('Guest token response:', response.data);\n    return response.data as FetchGuestTokenResponse;\n  }\n\n  /**\n   * Generates row-level security (RLS) rules based on user attributes.\n   *\n   * RLS rules are SQL WHERE clauses that Superset applies to queries\n   * to filter data based on user permissions. This ensures users only\n   * see data they are authorized to access.\n   *\n   * @param {User} user - User object containing organization and location data\n   * @returns {RLS} Array of SQL clause objects for row-level security\n   *\n   * @example\n   * // For an admin user\n   * getRLS(adminUser) // Returns: []\n   *\n   * // For a regular user\n   * getRLS(regularUser) // Returns: [\n   *   { clause: \"organisation_id IN (123)\" },\n   *   { clause: \"practice_location_id IN (1,2,3)\" }\n   * ]\n   */\n  getRLS(user: User): RLS {\n    // Convert pipe-separated locations string to array of numbers\n    const decodedUser: DecodedUser = {\n      ...user,\n      locations: user.locations.split('|||').map((location) => parseInt(location, 10)),\n    };\n\n    // Build RLS rules based on user type and attributes\n    const rules = [\n      {\n        // Organization filter: Only applied for non-ADMIN users\n        clause: `organisation_id IN (${user.user_type !== 'ADMIN' ? decodedUser.organisation_id : ''})`,\n      },\n      {\n        // Location filter: Applied for all users\n        clause: `practice_location_id IN (${decodedUser.locations.join(',')})`,\n      },\n    ];\n\n    // Filter out empty clauses (e.g., admin organization clause)\n    return rules.filter((clause) => clause.clause !== 'organisation_id IN ()' && clause.clause !== 'practice_location_id IN ()');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariablesValidator.html":{"url":"classes/EnvironmentVariablesValidator.html","title":"class - EnvironmentVariablesValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariablesValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/superset.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                SUPERSET_EMBEDDED_PASSWORD\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                SUPERSET_EMBEDDED_URL\n                            \n                            \n                                    \n                                    \n                                SUPERSET_EMBEDDED_USERNAME\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SUPERSET_EMBEDDED_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/superset.config.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        SUPERSET_EMBEDDED_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsUrl({protocols: undefined, require_tld: false})@IsNotEmpty()@Matches(/^.*[^\\\\/]$/, {message: 'URL should not end with a trailing slash (/)'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/superset.config.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        SUPERSET_EMBEDDED_USERNAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/config/superset.config.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { registerAs } from '@nestjs/config';\nimport { IsString, IsNotEmpty, IsUrl, Matches } from 'class-validator';\nimport validateConfig from '../utils/validate-config';\n\nclass EnvironmentVariablesValidator {\n  @IsString()\n  @IsNotEmpty()\n  SUPERSET_EMBEDDED_USERNAME: string;\n\n  @IsString()\n  @IsNotEmpty()\n  SUPERSET_EMBEDDED_PASSWORD: string;\n\n  @IsString()\n  @IsUrl({ protocols: ['http', 'https'], require_tld: false })\n  @IsNotEmpty()\n  @Matches(/^.*[^\\\\/]$/, {\n    message: 'URL should not end with a trailing slash (/)',\n  })\n  SUPERSET_EMBEDDED_URL: string;\n}\n\nexport default registerAs('superset', () => {\n  validateConfig(process.env, EnvironmentVariablesValidator);\n  return {\n    username: process.env.SUPERSET_EMBEDDED_USERNAME || '',\n    password: process.env.SUPERSET_EMBEDDED_PASSWORD || '',\n    url: process.env.SUPERSET_EMBEDDED_URL || '',\n  };\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/config/superset.config.ts\n            \n            class\n            EnvironmentVariablesValidator\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrapServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            handler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            variable\n            cachedServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/utils/validate-config.ts\n            \n            function\n            validateConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^4.0.0\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            aws-serverless-express : ^3.4.0\n        \n            axios : ^1.9.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrapServer   (src/.../main.ts)\n                        \n                        \n                            handler   (src/.../main.ts)\n                        \n                        \n                            validateConfig   (src/.../validate-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrapServer\n                        \n                    \n                \n            \n            \n                \nbootstrapServer()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handler\n                        \n                    \n                \n            \n            \n                \nhandler(req, res)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/validate-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateConfig\n                        \n                    \n                \n            \n            \n                \nvalidateConfig(config: Record, envVariablesClass: ClassConstructor)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                envVariablesClass\n                                            \n                                                        ClassConstructor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSuperset Guest Token Service Documentation\nOverview\nThis NestJS application provides a service for generating guest tokens from Apache Superset. Guest tokens are used to embed Superset dashboards in external applications with row-level security (RLS) rules applied based on user permissions.\nArchitecture\nThe application follows a standard NestJS architecture with:\n\nController (app.controller.ts): Handles HTTP requests\nService (app.service.ts): Contains business logic for token generation\nConfiguration: Uses NestJS ConfigService for managing Superset connection details\n\nAPI Endpoints\nGET /\nReturns a simple \"Hello World\" message to verify the service is running.\nResponse:\nExample :Hello WorldPOST /\nGenerates a guest token for embedding Superset dashboards.\nResponse:\nExample :{\n  \"status\": \"success\",\n  \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOi...\"\n}Error Response:\nExample :{\n  \"status\": \"failure\",\n  \"error\": \"Error message details\"\n}How It Works\nThe guest token generation process involves multiple steps:\n1. Authentication Flow\n\n2. User Object Structure\nThe application uses a hardcoded user object in the controller:\nExample :{\n  username: 'admin',\n  first_name: 'Admin',\n  last_name: 'User',\n  user_type: 'ADMIN',\n  organisation_id: 1,\n  locations: '1|||2'  // Pipe-separated location IDs\n}3. Row-Level Security (RLS)\nThe service applies RLS rules based on user attributes:\n\nOrganization filtering: Applied for non-ADMIN users\nLocation filtering: Applied based on user's assigned locations\n\nThe RLS rules are generated as SQL clauses:\nExample :organisation_id IN (1)\npractice_location_id IN (1,2)Configuration\nThe service requires the following environment variables for Superset connection:\nExample :interface SUPERSET_CONFIG {\n  url: string;        // Superset base URL\n  username: string;   // Superset admin username\n  password: string;   // Superset admin password\n}Type Definitions\nTokenResponse\nExample :interface TokenResponse {\n  status: 'success' | 'failure';\n  token?: string;\n  error?: string;\n}User\nExample :interface User {\n  username: string;\n  first_name: string;\n  last_name: string;\n  user_type: string;\n  organisation_id: number;\n  locations: string;  // Pipe-separated location IDs\n}DecodedUser\nExample :interface DecodedUser extends Omit {\n  locations: number[];  // Parsed location IDs\n}RLS (Row-Level Security)\nExample :type RLS = Array;Error Handling\nThe service includes error handling at each step:\n\nLogs errors using NestJS Logger\nReturns structured error responses\nPreserves error context for debugging\n\nSecurity Considerations\n\nHardcoded User: The current implementation uses a hardcoded admin user. In production, this should be replaced with actual user authentication.\n\nDashboard ID: The dashboard ID is hardcoded (30ddf642-4c36-40ee-ade2-fc77e6285a6c). This should be configurable or passed as a parameter.\n\nCredentials: Ensure Superset credentials are stored securely using environment variables or a secrets management system.\n\n\nUsage Example\nTo use this service in a frontend application:\nExample :// Fetch guest token\nconst response = await fetch('http://your-service-url/', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\nconst data = await response.json();\n\nif (data.status === 'success') {\n  // Use the token to embed Superset dashboard\n  const dashboardUrl = `${SUPERSET_URL}/superset/dashboard/${DASHBOARD_ID}/?guest_token=${data.token}`;\n  \n  // Embed in iframe\n  document.getElementById('dashboard-iframe').src = dashboardUrl;\n}Development Setup\n\nInstall dependencies:\nExample :npm install\nConfigure environment variables for Superset connection\n\nRun in development mode:\nExample :npm run start:dev\n\nTroubleshooting\nCommon Issues\n\nCSRF Token Errors: Ensure cookies are properly handled in the session\nAuthentication Failures: Verify Superset credentials and URL\nRLS Not Applied: Check that the RLS clauses match your Superset dataset columns\n\nDebug Mode\nEnable debug logging by setting the log level in your NestJS configuration:\nExample :Logger.setLogLevel(['debug']);API Response Types\nFetchAccessTokenResponse\nContains the access token from Superset login:\nExample :interface FetchAccessTokenResponse {\n  access_token: string;\n  refresh_token?: string;\n}FetchCSRFTokenResponse\nContains CSRF token and session cookie:\nExample :interface FetchCSRFTokenResponse {\n  result: string;  // CSRF token\n  session: string; // Session cookie\n}FetchGuestTokenResponse\nContains the final guest token:\nExample :interface FetchGuestTokenResponse {\n  token: string;\n}Dependencies\n\n@nestjs/core: Core NestJS framework\n@nestjs/axios: HTTP client for API calls\n@nestjs/config: Configuration management\naxios: HTTP client library\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppService\n\nAppService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : dev@beastinsights.co\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cachedServer   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cachedServer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
